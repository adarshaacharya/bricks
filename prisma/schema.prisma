// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  Client
  Admin
}

model User {
  id           String         @id @default(uuid())
  email        String         @unique
  password     String
  role         UserRole       @default(Client)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  schedule     Schedule[]
  profile      Profile?
  verification Verification[]
  verified     Boolean        @default(false)

  @@map("users")
}

model Verification {
  id   String @id @default(uuid())
  code String @unique

  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  createdAt DateTime @default(now())

  @@map("verifications")
}

model Profile {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  bio       String?
  birthDate DateTime @db.Date
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique

  @@map("profiles")
}

model Schedule {
  id     String   @id @default(uuid())
  date   DateTime @db.Date
  time   String
  userId String
  user   User     @relation(fields: [userId], references: [id])

  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("schedules")
}

model Property {
  id        String   @id @default(uuid())
  sold      Boolean  @default(false)
  size      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId String
  category   Category   @relation(fields: [categoryId], references: [id])
  schedules  Schedule[]
  address    Address?   @relation(fields: [addressId], references: [id])
  addressId  String?

  @@map("real_estates")
}

model Address {
  id       String     @id @default(uuid())
  street   String     @unique
  zip      Int        @unique
  city     String     @unique
  state    String     @unique
  property Property[]

  @@map("addresses")
}

model Category {
  id         String     @id @default(uuid())
  name       String     @unique
  slug       String     @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  properties Property[]

  @@map("categories")
}
